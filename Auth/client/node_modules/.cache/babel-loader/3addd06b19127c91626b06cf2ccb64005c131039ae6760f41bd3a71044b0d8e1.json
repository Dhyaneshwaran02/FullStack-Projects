{"ast":null,"code":"import tost from 'react-hot-toast';\n/**validate login pg username */\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n\n/**validate password*/\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n\n/**validate reset password */\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.exist = tost.error(\"Password not match....\");\n  }\n  return errors;\n}\n\n/**validate register form */\nexport async function registerValidation(values) {\n  const errors = usernameVerify({}, values);\n  passwordVerify(errors, values);\n}\n\n/**validate password */\nfunction passwordVerify(errors = {}, values) {\n  if (!values.password) {\n    errors.password = tost.error(\"Password required\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = tost.error(\"Wrong Password\");\n  } else if (values.password.length < 4) {\n    errors.password = tost.error(\"Password Must Be More than 4 characters Long\");\n  }\n  return errors;\n}\n\n/**Validate username */\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = tost.error('Username Required');\n  } else if (values.username.includes(\" \")) {\n    error.username = tost.error(\"Invalid Username..!\");\n  }\n  return error;\n}\n\n/**Validate email */\nfunction emailVerify(error = {}, values) {\n  if (!values.email) {\n    error.username = tost.error('Username Required');\n  } else if (values.username.includes(\" \")) {\n    error.username = tost.error(\"Invalid Username..!\");\n  }\n  return error;\n}","map":{"version":3,"names":["tost","usernameValidate","values","errors","usernameVerify","passwordValidate","passwordVerify","resetPasswordValidation","password","confirm_pwd","exist","error","registerValidation","includes","length","username","emailVerify","email"],"sources":["C:/Users/KD/OneDrive/Desktop/webilicious/Development/FullStack Projects/Auth/client/src/helper/validate.js"],"sourcesContent":["import tost from 'react-hot-toast'\r\n/**validate login pg username */\r\nexport async function usernameValidate(values){\r\n    const errors=usernameVerify({},values)\r\n    return errors;\r\n}\r\n\r\n/**validate password*/\r\nexport async function passwordValidate(values){\r\n    const errors=passwordVerify({},values)\r\n    return errors;\r\n}\r\n\r\n/**validate reset password */\r\nexport async function resetPasswordValidation(values){\r\n    const errors=passwordVerify({},values)\r\n\r\n    if(values.password!==values.confirm_pwd){\r\n        errors.exist=tost.error(\"Password not match....\")\r\n    }\r\n    return errors;\r\n\r\n}\r\n\r\n/**validate register form */\r\nexport async function registerValidation(values){\r\n    const errors=usernameVerify({},values)\r\n\r\n    passwordVerify(errors,values)\r\n\r\n}\r\n\r\n/**validate password */\r\nfunction passwordVerify(errors={},values){\r\n\r\n    if(!values.password){\r\n        errors.password=tost.error(\"Password required\")\r\n    }else if(values.password.includes(\" \")){\r\n        errors.password=tost.error(\"Wrong Password\")\r\n    }else if(values.password.length < 4){\r\n        errors.password=tost.error(\"Password Must Be More than 4 characters Long\")\r\n    }\r\n    return errors;\r\n\r\n}\r\n\r\n/**Validate username */\r\nfunction usernameVerify(error = {},values){\r\n    if(!values.username){\r\n        error.username=tost.error('Username Required')\r\n    }else if(values.username.includes(\" \")){\r\n        error.username=tost.error(\"Invalid Username..!\")\r\n    }\r\n    return error;\r\n}\r\n\r\n/**Validate email */\r\nfunction emailVerify(error = {},values){\r\n    if(!values.email){\r\n        error.username=tost.error('Username Required')\r\n    }else if(values.username.includes(\" \")){\r\n        error.username=tost.error(\"Invalid Username..!\")\r\n    }\r\n    return error;\r\n}"],"mappings":"AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAClC;AACA,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAACC,cAAc,CAAC,CAAC,CAAC,EAACF,MAAM,CAAC;EACtC,OAAOC,MAAM;AACjB;;AAEA;AACA,OAAO,eAAeE,gBAAgBA,CAACH,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAACG,cAAc,CAAC,CAAC,CAAC,EAACJ,MAAM,CAAC;EACtC,OAAOC,MAAM;AACjB;;AAEA;AACA,OAAO,eAAeI,uBAAuBA,CAACL,MAAM,EAAC;EACjD,MAAMC,MAAM,GAACG,cAAc,CAAC,CAAC,CAAC,EAACJ,MAAM,CAAC;EAEtC,IAAGA,MAAM,CAACM,QAAQ,KAAGN,MAAM,CAACO,WAAW,EAAC;IACpCN,MAAM,CAACO,KAAK,GAACV,IAAI,CAACW,KAAK,CAAC,wBAAwB,CAAC;EACrD;EACA,OAAOR,MAAM;AAEjB;;AAEA;AACA,OAAO,eAAeS,kBAAkBA,CAACV,MAAM,EAAC;EAC5C,MAAMC,MAAM,GAACC,cAAc,CAAC,CAAC,CAAC,EAACF,MAAM,CAAC;EAEtCI,cAAc,CAACH,MAAM,EAACD,MAAM,CAAC;AAEjC;;AAEA;AACA,SAASI,cAAcA,CAACH,MAAM,GAAC,CAAC,CAAC,EAACD,MAAM,EAAC;EAErC,IAAG,CAACA,MAAM,CAACM,QAAQ,EAAC;IAChBL,MAAM,CAACK,QAAQ,GAACR,IAAI,CAACW,KAAK,CAAC,mBAAmB,CAAC;EACnD,CAAC,MAAK,IAAGT,MAAM,CAACM,QAAQ,CAACK,QAAQ,CAAC,GAAG,CAAC,EAAC;IACnCV,MAAM,CAACK,QAAQ,GAACR,IAAI,CAACW,KAAK,CAAC,gBAAgB,CAAC;EAChD,CAAC,MAAK,IAAGT,MAAM,CAACM,QAAQ,CAACM,MAAM,GAAG,CAAC,EAAC;IAChCX,MAAM,CAACK,QAAQ,GAACR,IAAI,CAACW,KAAK,CAAC,8CAA8C,CAAC;EAC9E;EACA,OAAOR,MAAM;AAEjB;;AAEA;AACA,SAASC,cAAcA,CAACO,KAAK,GAAG,CAAC,CAAC,EAACT,MAAM,EAAC;EACtC,IAAG,CAACA,MAAM,CAACa,QAAQ,EAAC;IAChBJ,KAAK,CAACI,QAAQ,GAACf,IAAI,CAACW,KAAK,CAAC,mBAAmB,CAAC;EAClD,CAAC,MAAK,IAAGT,MAAM,CAACa,QAAQ,CAACF,QAAQ,CAAC,GAAG,CAAC,EAAC;IACnCF,KAAK,CAACI,QAAQ,GAACf,IAAI,CAACW,KAAK,CAAC,qBAAqB,CAAC;EACpD;EACA,OAAOA,KAAK;AAChB;;AAEA;AACA,SAASK,WAAWA,CAACL,KAAK,GAAG,CAAC,CAAC,EAACT,MAAM,EAAC;EACnC,IAAG,CAACA,MAAM,CAACe,KAAK,EAAC;IACbN,KAAK,CAACI,QAAQ,GAACf,IAAI,CAACW,KAAK,CAAC,mBAAmB,CAAC;EAClD,CAAC,MAAK,IAAGT,MAAM,CAACa,QAAQ,CAACF,QAAQ,CAAC,GAAG,CAAC,EAAC;IACnCF,KAAK,CAACI,QAAQ,GAACf,IAAI,CAACW,KAAK,CAAC,qBAAqB,CAAC;EACpD;EACA,OAAOA,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}